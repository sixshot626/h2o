/*
    Copyright 2008 Jenkov Development

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/



package com.jenkov.db.impl.mapping;

import com.jenkov.db.itf.PersistenceException;
import com.jenkov.db.itf.mapping.IObjectMapping;

import java.util.Iterator;

/**
 * @author Jakob Jenkov - Copyright 2005 Jenkov Development
 */
public class AutoGeneratedColumnsMapper extends CustomObjectMapperBase{

    protected String[] autoGeneratedColumns      = new String[0];
    protected boolean  isPrimaryKeyAutoGenerated = false;

    public AutoGeneratedColumnsMapper(String autoGeneratedColumn) {
        this.autoGeneratedColumns = new String[]{autoGeneratedColumn};
    }

    public AutoGeneratedColumnsMapper(String[] autoGeneratedColumns) {
        this.autoGeneratedColumns = autoGeneratedColumns;
    }

    public AutoGeneratedColumnsMapper(boolean isPrimaryKeyAutoGenerated) {
        this.isPrimaryKeyAutoGenerated = isPrimaryKeyAutoGenerated;
    }

    public AutoGeneratedColumnsMapper(boolean isPrimaryKeyAutoGenerated, String autoGeneratedColumn) {
        this.isPrimaryKeyAutoGenerated = isPrimaryKeyAutoGenerated;
        this.autoGeneratedColumns = new String[]{autoGeneratedColumn};
    }

    public AutoGeneratedColumnsMapper(boolean primaryKeyAutoGenerated, String[] autoGeneratedColumns) {
        this.autoGeneratedColumns = autoGeneratedColumns;
        isPrimaryKeyAutoGenerated = primaryKeyAutoGenerated;
    }

    public void modify(Object objectMappingKey, IObjectMapping mapping) throws PersistenceException {
        if(isPrimaryKeyAutoGenerated){
            for (Iterator iterator = mapping.getPrimaryKey().getColumns().iterator(); iterator.hasNext();) {
                String primaryKeyColumn = (String) iterator.next();
                mapping.getGetterMapping(primaryKeyColumn).setAutoGenerated(true);
            }
        }

        for (int i = 0; i < autoGeneratedColumns.length; i++) {
            mapping.getGetterMapping(autoGeneratedColumns[i]).setAutoGenerated(true);
        }
    }
}
