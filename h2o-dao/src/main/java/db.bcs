dbConfig = 1 h2o.common.util.ioc.ButterflyFactory("db","db.bcs");


sqlTable 		= 1 h2o.common.util.dao.SqlTable();
sqlTemplateUtil = 1 h2o.common.freemarker.TemplateUtil();
sqlBuilder 		= 1	h2o.dao.SqlBuilder();
map2BeanUtil	= 1 h2o.dao.impl.orm.DbMap2BeanUtil();


ds_wfl = 1 h2o.common.util.dao.datasource.DriverManagerDataSource()
					.setDriverClassName("oracle.jdbc.OracleDriver")
					.setUrl("jdbc:oracle:thin:@114.242.29.104:10015:vbsrun")
					.setUsername("wfl")
					.setPassword("wfl");
					
ds_vbs = 1 h2o.common.util.dao.datasource.DriverManagerDataSource()
					.setDriverClassName("oracle.jdbc.OracleDriver")
					.setUrl("jdbc:oracle:thin:@192.168.1.10:1521:vbsrun")
					.setUsername("vbs")
					.setPassword("vbs");					

					
					
dss = 1 <'default':ds_wfl , 'vbs':ds_vbs >;



argProcessor = 1 h2o.dao.impl.orm.DefaultArgProcessor();
ormProcessor = 1 h2o.dao.impl.orm.DefaultOrmProcessor();

dao = * h2o.dao.impl.DaoImpl( $0 , $1 ).setTxManager( h2o.dao.impl.tx.TxManagerImpl( $0 ) )
											   		.setArgProcessor( argProcessor )
											   		.setOrmProcessor( ormProcessor );
											   		
db 	= * h2o.dao.impl.DbImpl( $0 );



dbUtil = 1 h2o.dao.DbUtil().setDataSources(dss); 

/*  dbUtil = h2o.common.spring.factory.Factory.getObject("dbUtil"); */